name: Check Inactive Collaborators

on:
  workflow_dispatch: 

env:
    AWS_REGION: "eu-west-2"
    ENVIRONMENT_MANAGEMENT: ${{ secrets.MODERNISATION_PLATFORM_ENVIRONMENTS }}
    SCRIPTS_PATH: "./scripts/internal/collaborators-inactivity-notification"
    API_KEY: ${{ secrets.GOV_UK_NOTIFY_API_KEY }}
    TEMPLATE_ID: "44d86b2d-2a73-4179-9b67-7c3fc2b58934"

permissions:
    id-token: write # This is required for requesting the JWT
    contents: read # This is required for actions/checkout
    issues: write # This is required to create issues
jobs:
  disable-login-for-inactive-collaborators:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Fetch Inactive Collaborators
        run: bash ${SCRIPTS_PATH}/check_inactive_users.sh
        env:
          thresold: 120

      - name: Disable Console Login
        run: |
          # check final_users.list is exist
          if [ -f final_users.list ]; then
            while read username; do

              # Disable console access for the user
              if aws iam get-login-profile --user-name "$username" &> /dev/null; then
                aws iam delete-login-profile --user-name "$username"
                echo "Console access for $username has been disabled"
              fi

              # Get a list of access keys for the user and deactivate them if they are active
              access_keys=$(aws iam list-access-keys --user-name $username --query "AccessKeyMetadata[].AccessKeyId" --output text 2>/dev/null | xargs -n 1)
              while read -r key; do
                aws iam update-access-key --access-key-id $key --status Inactive --user-name $username
              done <<< "$access_keys"
            done <<< "$(cat final_users.list)"

          else
            echo "There are no inactive collaborator users with an inactivity period of 120 days or longer."
          fi

  notify-inactive-collaborators:
    runs-on: ubuntu-latest
    needs: disable-login-for-inactive-collaborators
    steps:
      - name: Checkout Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
    
      - name: Set Account Number
        run: echo "ACCOUNT_NUMBER=$(jq -r -e '.modernisation_platform_account_id' <<< $ENVIRONMENT_MANAGEMENT)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_NUMBER }}:role/github-actions"
          role-session-name: githubactionsrolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Install the client
        run: pip install notifications-python-client
    
      - name: Fetch Inactive Collaborators
        run: |
          bash ${SCRIPTS_PATH}/check_inactive_users.sh
          cat final_users.list
        env:
          thresold: 90
          SKIP_DISABLED_CONSOLE_USERS: true

      #- name: Send Notification to Collaborators
      #  run: python ${SCRIPTS_PATH}/notification.py collaborators.json final_users.list